{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "customDomainName": {
            "type": "string",
            "metadata": {
                "description": "The custom domain name to be used for internal access to the application via the Application Gateway"
            }
        },
        "keyVaultAdmin": {
            "type": "string",
            "metadata": {
                "description": "The object ID of the user or group who will have full permissons on Azure Key Vault"
            }
        },
        "location": {
            "type": "string",
            "metadata": {
                "description": "The location to deploy the resources. Modify template to allow additional regions"
            },
            "allowedValues": [
                "centralus",
                "eastus",
                "eastus2",
                "southcentralus",
                "westus",
                "westus2"
            ]
        },
        "onPremisesAddressSpace": {
            "type": "string",
            "metadata": {
                "description": "The IP address block used on-premises"
            },
            "defaultValue": "192.168.0.0/16"
        },
        "networkWatcherResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "The resource group where Network Watcher resources exist"
            },
            "defaultValue": "NetworkWatcherRG"
        },
        "sharedSubscriptionId": {
            "type": "string",
            "metadata": {
                "description": "The id of the subscription where the Shared Services resource group and resources will be deployed"
            },
            "defaultValue": "[subscription().subscriptionId]"
        },
        "transitSubscriptionId": {
            "type": "string",
            "metadata": {
                "description": "The id of the subscription where the Transit resource group and resources will be deployed"
            },
            "defaultValue": "[subscription().subscriptionId]"
        },
        "workloadSubscriptionId": {
            "type": "string",
            "metadata": {
                "description": "The id of the subscription where the Workload resource group and resources will be deployed"
            },
            "defaultValue": "[subscription().subscriptionId]"
        },
        "vmAdminUsername": {
            "type": "string",
            "metadata": {
                "description": "Administrator name for VMs that are created"
            }
        },
        "vmAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the VMs that are created"
            }
        },
        "tags": {
            "type": "object",
            "metadata": {
                "description": "The tags that wil be associated to the resources"
            },
            "defaultValue": {
                "environment": "lab"
            }
        },
        "uniqueData": {
            "type": "string",
            "metadata": {
                "description": "Creates a new GUID to create uniqueness for resources"
            },
            "defaultValue": "[substring(newGuid(),0,8)]"
        }
    },
    "variables": {
        "_apiVersionresources": "2020-06-01",
        "appGwIpWorkload": "10.2.0.4",
        "cloudRegionAddressSpace": "10.0.0.0/13",
        "rgDeploymentNameSharedSvc": "[concat('deploy-shared-rg',parameters('uniqueData'))]",
        "rgDeploymentNameTransit": "[concat('deploy-transit',parameters('uniqueData'))]",
        "rgDeploymentNameWorkload": "[concat('deploy-workload',parameters('uniqueData'))]",
        "rgNameSharedSvc": "[concat('rg-shared-',parameters('uniqueData'))]",
        "rgNameTransit": "[concat('rg-transit-',parameters('uniqueData'))]",
        "rgNameWorkload": "[concat('rg-workload-',parameters('uniqueData'))]",
        "subDeploymentNameSharedSvc": "[concat('deploy-shared-sub', parameters('uniqueData'))]",
        "subDeploymentNameTransit": "[concat('deploy-transit-sub',parameters('uniqueData'))]",
        "subDeploymentNameWorkload": "[concat('deploy-workload-sub', parameters('uniqueData'))]",
        "templateFileSharedSvc": "[concat(variables('templateUrisharedSvc'), 'deploy-shared.json')]",
        "templateFileTransit": "[concat(variables('templateUriTransit'), 'deploy-transit.json')]",
        "templateFileWorkload": "[concat(variables('templateUriWorkload'), 'deploy-workload.json')]",
        "templateUriSharedSvc": "[concat(uri(deployment().properties.templateLink.uri,'templates/core/shared/'))]",
        "templateUriTransit": "[concat(uri(deployment().properties.templateLink.uri,'templates/core/transit/'))]",
        "templateUriWorkload": "[concat(uri(deployment().properties.templateLink.uri,'templates/core/workload/'))]",
        "vmIpSharedSvcLinuxDevServer": "10.1.2.10",
        "vmIpSharedSvcWindowsDevServer": "10.1.2.11",
        "vnetCidrSharedSvc": "10.1.0.0/16",
        "vnetCidrTransit": "10.0.0.0/16",
        "vnetCidrWorkload": "10.2.0.0/16",
        "vnetSubnetCidrSharedSvcDev": "10.1.2.0/24",
        "vnetSubnetCidrSharedSvcDnsIn": "10.1.0.0/28",
        "vnetSubnetCidrSharedSvcDnsOut": "10.1.1.0/28",  
        "vnetSubnetCidrSharedSvcSvc": "10.1.3.0/24",
        "vnetSubnetCidrTransitBastion": "10.0.1.0/27",
        "vnetSubnetCidrTransitFw": "10.0.2.0/26",
        "vnetSubnetCidrTransitGateway": "10.0.0.0/27",
        "vnetSubnetCidrWorkloadApp": "10.2.1.0/24",
        "vnetSubnetCidrWorkloadAppGw": "10.2.0.0/24",
        "vnetSubnetCidrWorkloadData": "10.2.3.0/24",
        "vnetSubnetCidrWorkloadRvi": "10.2.2.0/24",
        "vnetSubnetCidrWorkloadSvc": "10.2.4.0/24"
    },
    "resources": [
        {
            "name": "[variables('subDeploymentNameTransit')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('_apiVersionresources')]",
            "location": "[parameters('location')]",
            "subscriptionId": "[parameters('transitSubscriptionId')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "name": "[variables('rgNameTransit')]",
                            "type": "Microsoft.Resources/resourceGroups",
                            "apiVersion": "[variables('_apiVersionresources')]",
                            "location": "[parameters('location')]",
                            "tags": "[parameters('tags')]",
                            "properties": {
                            }
                        }
                    ]
                }
            }
        },
        {
            "name": "[variables('subDeploymentNameSharedSvc')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('_apiVersionresources')]",
            "location": "[parameters('location')]",
            "subscriptionId": "[parameters('sharedSubscriptionId')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "name": "[variables('rgNameSharedSvc')]",
                            "type": "Microsoft.Resources/resourceGroups",
                            "apiVersion": "[variables('_apiVersionresources')]",
                            "location": "[parameters('location')]",
                            "tags": "[parameters('tags')]",
                            "properties": {
                            }
                        }
                    ]
                }
            }
        },
        {
            "name": "[variables('subDeploymentNameWorkload')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('_apiVersionresources')]",
            "location": "[parameters('location')]",
            "subscriptionId": "[parameters('workloadSubscriptionId')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "name": "[variables('rgNameWorkload')]",
                            "type": "Microsoft.Resources/resourceGroups",
                            "apiVersion": "[variables('_apiVersionresources')]",
                            "location": "[parameters('location')]",
                            "tags": "[parameters('tags')]",
                            "properties": {
                            }
                        }
                    ]
                }
            }
        },
        {
            "name": "[variables('rgDeploymentNameTransit')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('_apiVersionresources')]",
            "subscriptionId": "[parameters('transitSubscriptionId')]",
            "resourceGroup": "[variables('rgNameTransit')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('subDeploymentNameTransit'))]",
                "[concat('Microsoft.Resources/deployments/', variables('subDeploymentNameSharedSvc'))]",
                "[concat('Microsoft.Resources/deployments/', variables('subDeploymentNameWorkload'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "cloudAddressSpace": {
                        "value": "[variables('cloudRegionAddressSpace')]"
                    },
                    "networkWatcherRg": {
                        "value": "[parameters('networkWatcherResourceGroup')]"
                    },
                    "onPremisesAddressSpace": {
                        "value": "[parameters('onPremisesAddressSpace')]"
                    },
                    "sharedSvcDevSubnetCidr": {
                        "value": "[variables('vnetSubnetCidrSharedSvcDev')]"
                    },
                    "sharedSvcDnsInSubnetCidr": {
                        "value": "[variables('vnetSubnetCidrSharedSvcDnsIn')]"
                    },
                    "sharedSvcResourceGroupName": {
                        "value": "[variables('rgNameSharedSvc')]"
                    },
                    "sharedSvcSubscriptionId": {
                        "value": "[parameters('sharedSubscriptionId')]"
                    },
                    "sharedSvcVnetCidr": {
                        "value": "[variables('vnetCidrSharedSvc')]"
                    },
                    "transitBastionSubnetCidr": {
                        "value": "[variables('vnetSubnetCidrTransitBastion')]"
                    },
                    "transitFwSubnetPayCidr": {
                        "value": "[variables('vnetSubnetCidrTransitFw')]"
                    },
                    "transitGatewaySubnetCidr": {
                        "value": "[variables('vnetSubnetCidrTransitGateway')]"
                    },
                    "transitVnetCidr": {
                        "value": "[variables('vnetCidrTransit')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "workloadVnetCidr": {
                        "value": "[variables('vnetCidrWorkload')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('templateFileTransit')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('rgDeploymentNameSharedSvc')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('_apiVersionresources')]",
            "subscriptionId": "[parameters('sharedSubscriptionId')]",
            "resourceGroup": "[variables('rgNameSharedSvc')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('rgDeploymentNameTransit'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "cloudRegionAddressSpace": {
                        "value": "[variables('cloudRegionAddressSpace')]"
                    },
                    "customDomainName": {
                        "value": "[parameters('customDomainName')]"
                    },
                    "devLinuxServerIp": {
                        "value": "[variables('vmIpSharedSvcLinuxDevServer')]"
                    },
                    "devWindowsServerIp": {
                        "value": "[variables('vmIpSharedSvcWindowsDevServer')]"
                    },
                    "firewallIp": {
                        "value": "[reference(variables('rgDeploymentNameTransit')).outputs.firewallIp.value]"
                    },
                    "keyVaultAdmin": {
                        "value": "[parameters('keyVaultAdmin')]"
                    },
                    "lawResourceId": {
                        "value": "[reference(variables('rgDeploymentNameTransit')).outputs.lawResourceId.value]"
                    },
                    "networkWatcherRg": {
                        "value": "[parameters('networkWatcherResourceGroup')]"
                    },
                    "nsgStorageAccountResourceId": {
                        "value": "[reference(variables('rgDeploymentNameTransit')).outputs.nsgStorageAccountResourceId.value]"
                    },
                    "onPremisesAddressSpace": {
                        "value": "[parameters('onPremisesAddressSpace')]"
                    },
                    "sharedSvcVnetCidr": {
                        "value": "[variables('vnetCidrSharedSvc')]"
                    },
                    "sharedSvcVnetSubnetDevCidr": {
                        "value": "[variables('vnetSubnetCidrSharedSvcDev')]"
                    },
                    "sharedSvcVnetSubnetDnsInCidr": {
                        "value": "[variables('vnetSubnetCidrSharedSvcDnsIn')]"
                    },
                    "sharedSvcVnetSubnetDnsOutCidr": {
                        "value": "[variables('vnetSubnetCidrSharedSvcDnsOut')]"
                    },
                    "sharedSvcVnetSubnetSvcCidr": {
                        "value": "[variables('vnetSubnetCidrSharedSvcSvc')]"
                    },
                    "transitResourceGroupName": {
                        "value": "[variables('rgNameTransit')]"
                    },
                    "transitSubscriptionId": {
                        "value": "[parameters('transitSubscriptionId')]"
                    },
                    "transitVnetCidr": {
                        "value": "[variables('vnetCidrTransit')]"
                    },
                    "transitVnetName": {
                        "value": "[reference(variables('rgDeploymentNameTransit')).outputs.transitVnetName.value]"
                    },
                    "transitVnetResourceId": {
                        "value": "[reference(variables('rgDeploymentNameTransit')).outputs.transitVnetResourceId.value]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "vmAdminPassword": {
                        "value": "[parameters('vmAdminPassword')]"
                    },
                    "vmAdminUsername": {
                        "value": "[parameters('vmAdminUsername')]"
                    },
                    "workloadVnetCidr": {
                        "value": "[variables('vnetCidrWorkload')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('templateFileSharedSvc')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('rgDeploymentNameWorkload')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('_apiVersionresources')]",
            "subscriptionId": "[parameters('sharedSubscriptionId')]",
            "resourceGroup": "[variables('rgNameWorkload')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/',variables('rgDeploymentNameSharedSvc'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "appGwPrivateIp": {
                        "value": "[variables('appGwIpWorkload')]"
                    },
                    "cloudAddressSpace": {
                        "value": "[variables('cloudRegionAddressSpace')]"
                    },
                    "customDomainName": {
                        "value": "[parameters('customDomainName')]"
                    },
                    "dnsServerIp": {
                        "value": "[reference(variables('rgDeploymentNameTransit')).outputs.firewallIp.value]"
                    },
                    "firewallIp": {
                        "value": "[reference(variables('rgDeploymentNameTransit')).outputs.firewallIp.value]"
                    },
                    "keyVaultAdmin": {
                        "value": "[parameters('keyVaultAdmin')]"
                    },
                    "lawResourceId": {
                        "value": "[reference(variables('rgDeploymentNameTransit')).outputs.lawResourceId.value]"
                    },
                    "networkWatcherRg": {
                        "value": "[parameters('networkWatcherResourceGroup')]"
                    },
                    "nsgStorageAccountResourceId": {
                        "value": "[reference(variables('rgDeploymentNameTransit')).outputs.nsgStorageAccountResourceId.value]"
                    },
                    "onPremisesAddressSpace": {
                        "value": "[parameters('onPremisesAddressSpace')]"
                    },
                    "sharedSvcResourceGroupName": {
                        "value": "[variables('rgNameSharedSvc')]"
                    },
                    "sharedSvcVnetSubscriptionId": {
                        "value": "[parameters('sharedSubscriptionId')]"
                    },
                    "transitResourceGroupName": {
                        "value": "[variables('rgNameTransit')]"
                    },
                    "transitVnetSubscriptionId": {
                        "value": "[parameters('transitSubscriptionId')]"
                    },
                    "transitVnetName": {
                        "value": "[reference(variables('rgDeploymentNameTransit')).outputs.transitVnetName.value]"
                    },
                    "transitVnetResourceId": {
                        "value": "[reference(variables('rgDeploymentNameTransit')).outputs.transitVnetResourceId.value]"
                    },
                    "workloadVnetCidr": {
                        "value": "[variables('vnetCidrWorkload')]"
                    },
                    "workloadVnetSubnetAppCidr": {
                        "value": "[variables('vnetSubnetCidrWorkloadApp')]"
                    },
                    "workloadVnetSubnetAppGwCidr": {
                        "value": "[variables('vnetSubnetCidrWorkloadAppGw')]"
                    },
                    "workloadVnetSubnetDataCidr": {
                        "value": "[variables('vnetSubnetCidrWorkloadData')]"
                    },
                    "workloadVnetSubnetRviCidr": {
                        "value": "[variables('vnetSubnetCidrWorkloadRvi')]"
                    },
                    "workloadVnetSubnetSvcCidr": {
                        "value": "[variables('vnetSubnetCidrWorkloadSvc')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('templateFileWorkload')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        }
    ],
    "outputs": {
    }
}
