{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "keyVaultAdmin": {
            "type": "string",
            "metadata": {
                "description": "The object ID of the user or group who will have full permissons on Azure Key Vault"
            }
        },
        "primaryLocation": {
            "type": "string",
            "metadata": {
                "description": "The location the VWAN resource and primary VWAN hub is deployed."
            }
        },
        "secondaryLocation": {
            "type": "string",
            "metadata": {
                "description": "The location the secondary VWAN hub is deployed"
            }
        },
        "tags": {
            "type": "object",
            "metadata": {
                "description": "The tags that will be associated to the resources"
            },
            "defaultValue": {
                "environment": "lab"
            }
        },
        "uniqueData": {
            "type": "string",
            "metadata": {
                "description": "Data used to append to resources to ensure uniqueness"
            },
            "defaultValue": "[substring(newGuid(),0,8)]"
        },
        "vmAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the VMs that are created"
            }
        },
        "vmAdminUsername": {
            "type": "string",
            "metadata": {
                "description": "Administrator name for VMs that are created"
            }
        },
        "vwanHubCidrR1": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the VWAN hub in the primary region"
            }
        },
        "vwanHubCidrR2": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the VWAN hub in the secondary region"
            }
        }
    },
    "variables": {
        "_apiVersionNetworks": "2022-05-01",
        "_apiVersionResources": "2020-06-01",
        "_templatesUriGeneral": "[uri(deployment().properties.templateLink.uri, '../../general/')]",
        "deploymentNameKeyVaultCentral": "deploy-keyvault-central",
        "deploymentNameKvSecretUsername": "deploy-kv-secret-username",
        "deploymentNameKvSecretUserPassword": "deploy-kv-secret-user-password",
        "deploymentNameLawCentral": "deploy-law-central",
        "deploymentNameStorageAccountNsgR1": "deploy-storage-nsg-r1",
        "deploymentNameStorageAccountNsgR2": "deploy-storage-nsg-r2",
        "deploymentUriKeyVault": "[concat(variables('_templatesUriGeneral'), 'deploy-key-vault.json')]",
        "deploymentUriKeyVaultSecret": "[concat(variables('_templatesUriGeneral'), 'deploy-keyvault-secret.json')]",
        "deploymentUriLaw": "[concat(variables('_templatesUriGeneral'), 'deploy-law.json')]",
        "deploymentUriStorage": "[concat(variables('_templatesUriGeneral'), 'deploy-storage-account.json')]",
        "keyVaultNamePrefix":"kvcent",
        "keyVaultSecretNameUsername": "adminusername",
        "keyVaultSecretNameUserPassword": "adminpassword",
        "storageAccountNamePrefix": "stcent",
        "virtualNetworkGatewayNameR1": "[concat('vpngw', parameters('primaryLocation'), parameters('uniqueData'))]",
        "virtualNetworkGatewayNameR2": "[concat('vpngw', parameters('secondaryLocation'), parameters('uniqueData'))]",  
        "vwanHubNameR1": "[concat('vhub', parameters('primaryLocation'), parameters('uniqueData'))]",
        "vwanHubNameR2": "[concat('vhub', parameters('secondaryLocation'), parameters('uniqueData'))]",
        "vwanName": "[concat('vwan', parameters('uniqueData'))]"

    },
    "resources": [
        {
            "name": "[variables('deploymentNameLawCentral')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('_apiVersionResources')]",
            "dependsOn": [
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('deploymentUriLaw')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('deploymentNameKeyVaultCentral')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('_apiVersionResources')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('deploymentNameLawCentral'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "defaultAction": {
                        "value": "Allow"
                    },
                    "keyVaultAdminObjectId": {
                        "value": "[parameters('keyVaultAdmin')]"
                    },
                    "keyVaultNamePrefix": {
                        "value": "[variables('keyVaultNamePrefix')]"
                    },
                    "laWorkspaceResourceId": {
                        "value": "[reference(variables('deploymentNameLawCentral')).outputs.logAnalyticsResourceId.value]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('deploymentUriKeyVault')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('deploymentNameKvSecretUsername')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('_apiVersionResources')]",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "keyVaultName": {
                        "value": "[reference(variables('deploymentNameKeyVaultCentral')).outputs.keyVaultName.value]"
                    },
                    "location": {
                        "value": "[parameters('primaryLocation')]"
                    },
                    "secretName": {
                        "value": "[variables('keyVaultSecretNameUsername')]"
                    },
                    "secretValue": {
                        "value": "[parameters('vmAdminUsername')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('deploymentUriKeyVaultSecret')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('deploymentNameKvSecretUserPassword')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('_apiVersionResources')]",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "keyVaultName": {
                        "value": "[reference(variables('deploymentNameKeyVaultCentral')).outputs.keyVaultName.value]"
                    },
                    "location": {
                        "value": "[parameters('primaryLocation')]"
                    },
                    "secretName": {
                        "value": "[variables('keyVaultSecretNameUserPassword')]"
                    },
                    "secretValue": {
                        "value": "[parameters('vmAdminPassword')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('deploymentUriKeyVaultSecret')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('deploymentNameStorageAccountNsgR1')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('_apiVersionResources')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('deploymentNameLawCentral'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "defaultAction": {
                        "value": "Deny"
                    },
                    "laWorkspaceResourceId": {
                        "value": "[reference(variables('deploymentNameLawCentral')).outputs.logAnalyticsResourceId.value]"
                    },
                    "location": {
                        "value": "[parameters('primaryLocation')]"
                    },
                    "storageAccountNamePrefix": {
                        "value": "[variables('storageAccountNamePrefix')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('deploymentUriStorage')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('deploymentNameStorageAccountNsgR2')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('_apiVersionResources')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('deploymentNameLawCentral'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "defaultAction": {
                        "value": "Deny"
                    },
                    "laWorkspaceResourceId": {
                        "value": "[reference(variables('deploymentNameLawCentral')).outputs.logAnalyticsResourceId.value]"
                    },
                    "location": {
                        "value": "[parameters('secondaryLocation')]"
                    },
                    "storageAccountNamePrefix": {
                        "value": "[variables('storageAccountNamePrefix')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('deploymentUriStorage')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualWans",
            "apiVersion": "[variables('_apiVersionNetworks')]",
            "name": "[variables('vwanName')]",
            "location": "[parameters('primaryLocation')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/',variables('deploymentNameStorageAccountNsgR1'))]",
                "[concat('Microsoft.Resources/deployments/',variables('deploymentNameStorageAccountNsgR1'))]"
            ],
            "properties": {
                "allowBranchToBranchTraffic": "true",
                "allowVnetToVnetTraffic": "true",
                "disableVpnEncryption": "false",
                "type": "Standard"
            }
        },
        {
            "type": "Microsoft.Network/virtualHubs",
            "apiVersion": "[variables('_apiVersionNetworks')]",
            "name": "[variables('vwanHubNameR1')]",
            "location": "[parameters('primaryLocation')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualWans', variables('vwanName'))]"
            ],
            "properties": {
                "addressPrefix": "[parameters('vwanHubCidrR1')]",
                "hubRoutingPreference": "ExpressRoute",
                "preferredRoutingGateway": "ExpressRoute",
                "sku": "Standard",
                "virtualRouterAsn": "65515",
                "virtualRouterAutoScaleConfiguration": {
                    "minCapacity": 2
                },
                "virtualWan": {
                    "id": "[resourceId('Microsoft.Network/virtualWans',variables('vwanName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualHubs",
            "apiVersion": "[variables('_apiVersionNetworks')]",
            "name": "[variables('vwanHubNameR2')]",
            "location": "[parameters('secondaryLocation')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualWans', variables('vwanName'))]",
                "[resourceId('Microsoft.Network/virtualHubs', variables('vwanHubNameR1'))]"
            ],
            "properties": {
                "addressPrefix": "[parameters('vwanHubCidrR2')]",
                "hubRoutingPreference": "ExpressRoute",
                "preferredRoutingGateway": "ExpressRoute",
                "sku": "Standard",
                "virtualRouterAsn": "65515",
                "virtualRouterAutoScaleConfiguration": {
                    "minCapacity": 2
                },
                "virtualWan": {
                    "id": "[resourceId('Microsoft.Network/virtualWans',variables('vwanName'))]"
                }


            }
        },
        {
            "name": "[variables('virtualNetworkGatewayNameR1')]",
            "type": "Microsoft.Network/vpnGateways",
            "apiVersion": "[variables('_apiVersionNetworks')]",
            "location": "[parameters('primaryLocation')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualHubs', variables('vwanHubNameR1'))]"
            ],
            "properties": {
                "bgpSettings": {
                    "asn": 65515
                },
                "virtualHub": {
                    "id": "[resourceId('Microsoft.Network/virtualHubs', variables('vwanHubNameR1'))]"
                },
                "vpnGatewayScaleUnit": "1"
            }
        },
        {
            "name": "[variables('virtualNetworkGatewayNameR2')]",
            "type": "Microsoft.Network/vpnGateways",
            "apiVersion": "[variables('_apiVersionNetworks')]",
            "location": "[parameters('secondaryLocation')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualHubs', variables('vwanHubNameR2'))]"
            ],
            "properties": {
                "bgpSettings": {
                    "asn": 65515
                },
                "virtualHub": {
                    "id": "[resourceId('Microsoft.Network/virtualHubs', variables('vwanHubNameR2'))]"
                },
                "vpnGatewayScaleUnit": "1"
            }
        }
    ],
    "outputs": {
        "lawResourceId": {
            "type": "string",
            "value": "[reference(variables('deploymentNameLawCentral')).outputs.logAnalyticsResourceId.value]"
        },
        "storageAccountNsgR1ResourceId": {
            "type": "string",
            "value": "[reference(variables('deploymentNameStorageAccountNsgR1')).outputs.storageAccountResourceId.value]"
        },
        "storageAccountNsgR2ResourceId": {
            "type": "string",
            "value": "[reference(variables('deploymentNameStorageAccountNsgR2')).outputs.storageAccountResourceId.value]"
        },
        "vwanName": {
            "type": "string",
            "value": "[variables('vwanName')]"
        },
        "vwanResourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Network/virtualWans',variables('vwanName'))]"
        },
        "vwanHubR1Name": {
            "type": "string",
            "value": "[variables('vwanHubNameR1')]"
        },        
        "vwanHubR1ResourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Network/virtualHubs',variables('vwanHubNameR1'))]"
        },
        "vwanHubR2Name": {
            "type": "string",
            "value": "[variables('vwanHubNameR2')]"
        },     
        "vwanHubR2ResourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Network/virtualHubs',variables('vwanHubNameR2'))]"
        }
    }
}
